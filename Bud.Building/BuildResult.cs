using System.Collections.Immutable;

namespace Bud {
  /// <summary>
  ///   Contains information about outcome of a build. For example: a list of output files and the signature of the
  ///   task.
  ///
  ///   Instances of this class are returned by the <see cref="BuildTask.Execute"/> method.
  /// </summary>
  public class BuildResult {
    /// <summary>
    ///   Files from which the output files will be generated by a <see cref="BuildTask"/>.
    /// </summary>
    public IImmutableSet<string> InputFiles { get; }

    /// <summary>
    ///   Files generated by a <see cref="BuildTask"/>.
    /// </summary>
    public IImmutableSet<string> OutputFiles { get; }

    /// <summary>
    ///   The signature of the task that will generate the output files.
    /// </summary>
    public string Signature { get; }

    /// <summary>
    ///   Initializes a new instance of the <see cref="BuildResult"/> class.
    /// </summary>
    /// <param name="outputFiles">see <see cref="OutputFiles"/></param>
    /// <param name="signature">see <see cref="Signature"/></param>
    /// <param name="inputFiles">see <see cref="InputFiles"/></param>
    public BuildResult(IImmutableSet<string> outputFiles, string signature, IImmutableSet<string> inputFiles) {
      OutputFiles = outputFiles;
      Signature = signature;
      InputFiles = inputFiles;
    }
  }
}